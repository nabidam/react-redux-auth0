{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Hist",
				"HistoryIcon"
			],
			[
				"menu",
				"menuOpen"
			],
			[
				"handl",
				"handleClickMenu"
			],
			[
				"Lis",
				"ListItemText"
			],
			[
				"var",
				"variant"
			],
			[
				"T",
				"Typography"
			],
			[
				"avat",
				"avatarIcon"
			],
			[
				"class",
				"className\t: DOMString Element"
			],
			[
				"anch",
				"anchorEl"
			],
			[
				"handle",
				"handleMenu"
			],
			[
				"hand",
				"handleMenu"
			],
			[
				"isPRo",
				"isProfileOpen"
			],
			[
				"whi",
				"whiteSpace\t = 'pre-line' Style CSS"
			],
			[
				"isA",
				"isAuthenticated"
			],
			[
				"p",
				"position\t = 'absolute' Style CSS"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/components/Dashboard/Header.js",
			"settings":
			{
				"buffer_size": 5260,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Dashboard/UpgradePremium.jsx",
			"settings":
			{
				"buffer_size": 1541,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "dist/index.html",
			"settings":
			{
				"buffer_size": 1668,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Dashboard/Sidebar.js",
			"settings":
			{
				"buffer_size": 7175,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/Dashboard/Dashboard.js",
			"settings":
			{
				"buffer_size": 5883,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/styles/styles.css",
			"settings":
			{
				"buffer_size": 688,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport {Grid, Button} from \"@material-ui/core\";\nimport {connect} from \"react-redux\";\nimport triggerDrawer from \"../../actions/triggerDrawer\";\nimport Icon from '@material-ui/core/Icon';\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport SendIcon from '@material-ui/icons/Send';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport StarBorder from '@material-ui/icons/StarBorder';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n    float: \"right\"\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\"\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(7) + 1\n  },\n  rtlToolBar: {\n    direction: \"rtl\"\n  },\n  toolbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-start\"\n  },\n  content: {\n    direction: \"rtl\",\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    marginRight: 0,\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  }\n}));\n \nconst Sidebar = () => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const handleClickMenu = () => {\n      setOpen(!open);\n    }\n\n    return (\n      <Drawer\n        variant=\"permanent\"\n        anchor=\"right\"\n        className={classNames(classes.drawer, {\n          [classes.drawerOpen]: this.props.isDrawerOpen,\n          [classes.drawerClose]: !this.props.isDrawerOpen\n        })}\n        classes={{\n          paper: classNames({\n            [classes.drawerOpen]: this.props.isDrawerOpen,\n            [classes.drawerClose]: !this.props.isDrawerOpen\n          })\n        }}\n        open={this.props.isDrawerOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={this.props.triggerDrawer}>\n            {theme.direction === \"rtl\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button>\n            <ListItemIcon>\n              <Icon>\n                <i className=\"fas fa-plus\"></i>\n              </Icon>\n            </ListItemIcon>\n            <ListItemText className=\"list-item-right\">ایجاد کوئری جدید</ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        <List\n          component=\"nav\"\n          subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\n          className={classes.root}\n        >\n          <ListItem button onClick={handleClick}>\n            <ListItemIcon>\n              <InboxIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Inbox\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItem>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n              <ListItem button className={classes.nested}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText primary=\"Starred\" />\n              </ListItem>\n            </List>\n          </Collapse>\n        </List>\n        <Divider />\n      </Drawer>\n    );\n}\n\nSidebar.propTypes = {\n  isDrawerOpen: PropTypes.bool,\n  triggerDrawer: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    isDrawerOpen: state.isDrawerOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    triggerDrawer: () => dispatch(triggerDrawer())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Sidebar);\n",
			"settings":
			{
				"buffer_size": 6062,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<List>\n          {[\"لینک اول\", \"لینک دوم\", \"لینک سوم\", \"لینک چهارم\"].map(\n            (text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} className=\"list-item-right\" />\n              </ListItem>\n            )\n          )}\n        </List>",
			"settings":
			{
				"buffer_size": 422,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"colo",
				"Color Picker"
			],
			[
				"inden",
				"Indentation: Reindent Lines"
			],
			[
				"lore",
				"LoremIpsum: (30) lots"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ui",
				"UI: Select Color Scheme"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pro",
				"Project: Save As"
			],
			[
				"color",
				"UI: Select Color Scheme"
			],
			[
				"the",
				"UI: Select Theme"
			],
			[
				"term",
				"Terminal View: Open Bash Terminal"
			],
			[
				"termi",
				"Terminal View: Open Bash Terminal"
			],
			[
				"file",
				"A File Icon: Settings"
			],
			[
				"ui the",
				"UI: Select Theme"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"theme",
				"UI: Select Theme"
			],
			[
				"color s",
				"UI: Select Color Scheme"
			],
			[
				"packa",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 124.0,
		"history":
		[
			"node"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/srv/http/react-redux-auth0",
		"/srv/http/react-redux-auth0/dist",
		"/srv/http/react-redux-auth0/src",
		"/srv/http/react-redux-auth0/src/components",
		"/srv/http/react-redux-auth0/src/components/Dashboard",
		"/srv/http/react-redux-auth0/src/styles"
	],
	"file_history":
	[
		"/srv/http/react-redux-auth0/src/App.js",
		"/srv/http/react-redux-auth0/src/components/Dashboard/Dashboard.js",
		"/srv/http/react-redux-auth0/src/index.js",
		"/srv/http/react-redux-auth0/webpack.config.js",
		"/srv/http/react-redux-auth0/dist/index.html",
		"/srv/http/react-redux-auth0/dist/fontawesome.css",
		"/srv/http/react-redux-auth0/src/components/Dashboard/UpgradePremium.jsx",
		"/srv/http/react-redux-auth0/src/styles/fontawesome.css",
		"/srv/http/react-redux-auth0/src/components/Dashboard/Profile.jsx",
		"/srv/http/react-redux-auth0/src/styles/styles.css",
		"/srv/http/react-redux-auth0/src/components/Header.js",
		"/srv/http/react-redux-auth0/src/reducers/rootReducer.js",
		"/srv/http/react-redux-auth0/src/components/Login.js",
		"/srv/http/react-redux-auth0/src/components/Callback.js",
		"/home/navid/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
		"/home/navid/.config/sublime-text-3/Packages/User/.jsbeautifyrc",
		"/home/navid/.config/sublime-text-3/Packages/User/HTMLPrettify.sublime-settings",
		"/srv/http/react-redux-auth0/src/components/Login.jsx",
		"/srv/http/react-redux-auth0/src/App.jsx",
		"/srv/http/bazarb2b/routes/web.php",
		"/srv/http/bazarb2b/.editorconfig",
		"/srv/http/bazarb2b/bazar.sublime-project",
		"/srv/http/bazarb2b/resources/views/index.blade.php",
		"/home/navid/.config/sublime-text-3/Packages/Package Control/Package Control.sublime-settings",
		"/home/navid/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/navid/.config/sublime-text-3/Packages/User/SFTP.sublime-settings",
		"/home/navid/Desktop/dl.txt",
		"/run/media/navid/F45223015222C866/arch download/android-studio/PKGBUILD"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Icon",
			"HistoryIcon",
			"Whatshot",
			"\">\np\"",
			"\">\n",
			"p\">",
			"p\"",
			"p",
			"rtlTool",
			"content",
			"content}",
			"open",
			"../",
			"Profile",
			"e",
			"handleMenu()",
			"() => this.",
			"handleMenu",
			"this",
			"handleMenu",
			"handleClose",
			"h3"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/components/Dashboard/Header.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5260,
						"regions":
						{
						},
						"selection":
						[
							[
								3825,
								3825
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2394.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/components/Dashboard/UpgradePremium.jsx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1541,
						"regions":
						{
						},
						"selection":
						[
							[
								1314,
								1314
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "dist/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1668,
						"regions":
						{
						},
						"selection":
						[
							[
								1002,
								1002
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/components/Dashboard/Sidebar.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7175,
						"regions":
						{
						},
						"selection":
						[
							[
								1199,
								1199
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/components/Dashboard/Dashboard.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5883,
						"regions":
						{
						},
						"selection":
						[
							[
								523,
								523
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 210.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/styles/styles.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 688,
						"regions":
						{
						},
						"selection":
						[
							[
								602,
								602
							]
						],
						"settings":
						{
							"color_scheme": "Packages/User/Color Highlighter/themes/Material Spaceblack Oceanic.tmTheme",
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6062,
						"regions":
						{
						},
						"selection":
						[
							[
								5114,
								5114
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2824.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 7,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 422,
						"regions":
						{
						},
						"selection":
						[
							[
								422,
								422
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/Babel/JavaScript (Babel).sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 44.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "rra.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 241.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
